* {
  box-sizing: border-box;
}

body {
  font-family: 'Lato';
  -webkit-font-smoothing: antialiased;
  text-rendering: geometricPrecision;
  line-height: 1.5;
}

h1, h2 {
  font-weight: 300;
}

.fa {
  font-size: 30px;
  color: white;
}

h2 {
  font-size: 36px;
  margin: 0 0 16px;
}

p {
  margin: 0 0 16px;
}

/* variables per optimitzat usabilitat*/
$cubic-bezier: cubic-bezier(0.23, 1, 0.32, 1);
$transition: all 0.6s $cubic-bezier;


.strips {
  min-height: 100vh;
  text-align: center;
  overflow: hidden;
  color: white;
}

.strips__strip {
    will-change: width, left, z-index, height;
    position: absolute;
    width: 20%;
    min-height: 100vh;
    overflow: hidden;
    cursor: pointer;
    transition: $transition;

    --expanded {
        width: 100%;
        top: 0 !important;
        left: 0 !important;
        z-index: 3;
        cursor: default;
    }

}

/*bucle per posicionar els blocs*/
$left-child: 0;
@for $i from 1 through 5 {
    .strips__strip:nth-child(#{$i}) {
        left: #{$left-child}vw;
    }
    $left-child: $left-child + 20;
}

/*bucle per posar caracter√≠stiques els blocs*/
$list1: -100%, 0, 0;
$list2: 0, 100%, 0;
$list3: 0, -100%, 0;
$list4: 0, 100%, 0;
$list5: 100%, 0, 0;
$trans-value: (t1: $list1, t2: $list2, t3: $list3, t4: $list4, t5: $list5);
$strip-colors: (c1:#244F75, c2:#60BFBF, c3: #8C4B7E, c4: #F8BB44, c5: #F24B4B);
@for $i from 1 through 5 {
    $list: map-get($trans-value, t#{$i});
    $color: map-get($strip-colors, c#{$i});
    $seg: #{$i/10}s;
    .strips__strip:nth-child(#{$i}) .strip__content {
        background:$color;
        -webkit-transform: translate3d($list);
          transform: translate3d($list);
        -webkit-animation-name: strip#{$i};
          animation-name: strip#{$i};
        -webkit-animation-delay: $seg;
          animation-delay: $seg;
    }
}


.strips .strip__content {
  -webkit-animation-duration: 1s;
          animation-duration: 1s;
  -webkit-animation-timing-function: $cubic-bezier;
          animation-timing-function: $cubic-bezier;
  -webkit-animation-fill-mode: both;
          animation-fill-mode: both;
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  text-decoration: none;
}

.strips .strip__content:hover:before {
  -webkit-transform: skew(0deg) scale(3) translate(0, 0);
          transform: skew(0deg) scale(3) translate(0, 0);
  opacity: 0.1;
}

.strips .strip__content:before {
  content: "";
  position: absolute;
  z-index: 1;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: white;
  opacity: 0.05;
  -webkit-transform-origin: center center;
          transform-origin: center center;
  -webkit-transform: skew(30deg) scaleY(1) translate(0, 0);
          transform: skew(30deg) scaleY(1) translate(0, 0);
  transition: $transition;
}

.strips .strip__inner-text {
  will-change: transform, opacity;
  position: absolute;
  z-index: 5;
  top: 50%;
  left: 50%;
  width: 70%;
  -webkit-transform: translate(-50%, -50%) scale(0.5);
          transform: translate(-50%, -50%) scale(0.5);
  opacity: 0;
  transition: $transition;
}

@media screen and (max-width: 760px) {
  .strips__strip--expanded {
    min-height: 100vh;
  }
}

.strips__strip--expanded .strip__content:hover:before {
  -webkit-transform: skew(-30deg) scale(1) translate(0, 0);
          transform: skew(-30deg) scale(1) translate(0, 0);
  opacity: 0.05;
}

.strips__strip--expanded .strip__title {
  opacity: 0;
}

.strips__strip--expanded .strip__inner-text {
  opacity: 1;
  -webkit-transform: translate(-50%, -50%) scale(1);
          transform: translate(-50%, -50%) scale(1);
}

.strip__title {
  display: block;
  margin: 0;
  position: relative;
  z-index: 2;
  width: 100%;
  font-size: 3.5vw;
  color: white;
  transition: $transition;
}

@mixin transform-traslate{
    -webkit-transform: translate3d(0, 0, 0);
            transform: translate3d(0, 0, 0);
}

/*bucle per crar els keyframes*/
@for $i from 1 through 5 {
    $nom: strip#{$i};
    $list: map-get($trans-value, t#{$i});
    @-webkit-keyframes #{$nom} {
        0% {
        -webkit-transform: translate3d($list);
                transform: translate3d($list);
        }
        100% {
            @include transform-traslate();
        }
    }

    @keyframes #{$nom} {
        0% {
        -webkit-transform: translate3d($list);
                transform: translate3d($list);
        }
        100% {
            @include transform-traslate();
        }
    }
}
